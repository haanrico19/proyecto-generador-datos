import java.io.*;
import java.util.*;

public class GenerateInfoFilesV1 {

    private static final String[] FIRST_NAMES = {"Carlos", "Ana", "Luis", "Maria", "Pedro", "Laura", "Juan", "Sofia"};
    private static final String[] LAST_NAMES = {"Gomez", "Rodriguez", "Lopez", "Martinez", "Garcia", "Perez", "Sanchez"};
    private static final String[] PRODUCT_NAMES = {"Laptop", "Mouse", "Teclado", "Monitor", "Impresora", "Tablet", "Smartphone"};
    private static final String[] DOC_TYPES = {"CC", "CE", "TI", "PP"};

    public static void main(String[] args) {
        try {
            // Generar archivos de prueba
            createProductsFile(10);
            createSalesManInfoFile(5);

            // Generar archivos de ventas para cada vendedor
            for (int i = 1; i <= 5; i++) {
                String name = "Vendedor" + i;
                long id = 1000000000L + i;
                createSalesMenFile(20, name, id);
            }

            System.out.println("Archivos generados exitosamente.");
        } catch (IOException e) {
            System.err.println("Error al generar archivos: " + e.getMessage());
        }
    }

    public static void createSalesMenFile(int randomSalesCount, String name, long id) throws IOException {
        String filename = "sales_" + name + "_" + id + ".txt";
        try (PrintWriter writer = new PrintWriter(new FileWriter(filename))) {
            writer.println("CC;" + id);
            Random random = new Random();
            for (int i = 0; i < randomSalesCount; i++) {
                int productId = random.nextInt(10) + 1;
                int quantity = random.nextInt(10) + 1;
                writer.println(productId + ";" + quantity);
            }
        }
    }

    public static void createProductsFile(int productsCount) throws IOException {
        try (PrintWriter writer = new PrintWriter(new FileWriter("products.txt"))) {
            Random random = new Random();
            for (int i = 1; i <= productsCount; i++) {
                String productName = PRODUCT_NAMES[random.nextInt(PRODUCT_NAMES.length)];
                double price = 50 + random.nextDouble() * 950;
                writer.println(i + ";" + productName + ";" + String.format("%.2f", price));
            }
        }
    }

    public static void createSalesManInfoFile(int salesmanCount) throws IOException {
        try (PrintWriter writer = new PrintWriter(new FileWriter("salesmen_info.txt"))) {
            Random random = new Random();
            for (int i = 1; i <= salesmanCount; i++) {
                String docType = DOC_TYPES[random.nextInt(DOC_TYPES.length)];
                long docNumber = 1000000000L + i;
                String firstName = FIRST_NAMES[random.nextInt(FIRST_NAMES.length)];
                String lastName = LAST_NAMES[random.nextInt(LAST_NAMES.length)];
                writer.println(docType + ";" + docNumber + ";" + firstName + ";" + lastName);
            }
        }
    }
}

import java.io.*;
import java.util.*;

public class GenerateInfoFilesV2 {

    private static final Random random = new Random();

    public static void main(String[] args) {
        try {
            int productsCount = 15;
            int salesmenCount = 8;
            int salesPerSalesman = 25;
            generateTestFiles(productsCount, salesmenCount, salesPerSalesman);
            System.out.println("Todos los archivos fueron generados exitosamente!");
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public static void generateTestFiles(int productsCount, int salesmenCount, int salesPerSalesman) throws IOException {
        List<Product> products = createProductsFile(productsCount);
        List<Salesman> salesmen = createSalesManInfoFile(salesmenCount);
        for (Salesman salesman : salesmen) {
            createSalesMenFile(salesPerSalesman, salesman, products);
        }
    }

    public static void createSalesMenFile(int randomSalesCount, Salesman salesman, List<Product> products) throws IOException {
        String filename = String.format("ventas_%s_%d.txt", salesman.getLastName().toLowerCase(), salesman.getDocNumber());
        try (PrintWriter writer = new PrintWriter(new FileWriter(filename))) {
            writer.println(salesman.getDocType() + ";" + salesman.getDocNumber());
            for (int i = 0; i < randomSalesCount; i++) {
                Product product = products.get(random.nextInt(products.size()));
                int quantity = 1 + random.nextInt(15);
                writer.println(product.getId() + ";" + quantity);
            }
        }
    }

    public static List<Product> createProductsFile(int productsCount) throws IOException {
        List<Product> products = new ArrayList<>();
        String[] productCategories = {"Electrónico", "Oficina", "Hogar", "Tecnología"};
        String[] productBrands = {"Samsung", "Apple", "LG", "Sony", "HP", "Dell"};
        try (PrintWriter writer = new PrintWriter(new FileWriter("productos.txt"))) {
            for (int i = 1; i <= productsCount; i++) {
                String category = productCategories[random.nextInt(productCategories.length)];
                String brand = productBrands[random.nextInt(productBrands.length)];
                String productName = brand + " " + category + " " + i;
                double price = 100 + random.nextDouble() * 900;
                Product product = new Product(i, productName, price);
                products.add(product);
                writer.println(i + ";" + productName + ";" + String.format("%.2f", price));
            }
        }
        return products;
    }

    public static List<Salesman> createSalesManInfoFile(int salesmanCount) throws IOException {
        List<Salesman> salesmen = new ArrayList<>();
        String[] firstNames = {"Andrés", "Beatriz", "Camilo", "Diana", "Esteban", "Fernanda", "Gabriel", "Helena"};
        String[] lastNames = {"Ramírez", "Vargas", "Silva", "Mendoza", "Ortega", "Navarro", "Rojas", "Castro"};
        String[] docTypes = {"CC", "CE", "TI", "PP"};
        try (PrintWriter writer = new PrintWriter(new FileWriter("informacion_vendedores.txt"))) {
            for (int i = 1; i <= salesmanCount; i++) {
                String docType = docTypes[random.nextInt(docTypes.length)];
                long docNumber = 1000000000L + i;
                String firstName = firstNames[random.nextInt(firstNames.length)];
                String lastName = lastNames[random.nextInt(lastNames.length)];
                Salesman salesman = new Salesman(docType, docNumber, firstName, lastName);
                salesmen.add(salesman);
                writer.println(docType + ";" + docNumber + ";" + firstName + ";" + lastName);
            }
        }
        return salesmen;
    }

    static class Product {
        private int id;
        private String name;
        private double price;
        public Product(int id, String name, double price) {
            this.id = id;
            this.name = name;
            this.price = price;
        }
        public int getId() { return id; }
        public String getName() { return name; }
        public double getPrice() { return price; }
    }

    static class Salesman {
        private String docType;
        private long docNumber;
        private String firstName;
        private String lastName;
        public Salesman(String docType, long docNumber, String firstName, String lastName) {
            this.docType = docType;
            this.docNumber = docNumber;
            this.firstName = firstName;
            this.lastName = lastName;
        }
        public String getDocType() { return docType; }
        public long getDocNumber() { return docNumber; }
        public String getFirstName() { return firstName; }
        public String getLastName() { return lastName; }
    }
}

public class Vendedores {
    public static void main(String[] args) {
        String[] nombresVendedores = {"ALEJANDRA", "JOSE CAMILO"};
        String[] apellidosVendedores = {"PEREZ PULIDO", "AGUILAR CASTILLO", "PUENTES HERNANDEZ"};
        String[] tipoDocumentos = {"CC", "CC", "CC"};
        String[] numeroDocumentos = {"1030692024", "1015045823", "1012526428"};

        int[] idsProductos = {101, 102, 103};
        int[][] cantidadesProductos = { {32,28,15}, {5,15,9}, {20,2,3} };
        double[] preciosProductos = {32000000, 42000000, 56000000};
        String[] nombresProductos = {"MOTO", "CARRO", "VEHICULO"};

        double[] ventasTotalesPorVendedor = new double[nombresVendedores.length];

        for (int i = 0; i < nombresVendedores.length; i++) {
            for (int j = 0; j < nombresProductos.length; j++) {
                ventasTotalesPorVendedor[i] += cantidadesProductos[i][j] * preciosProductos[j];
            }
        }

        int indiceVendedorMasVentas = 0;
        for (int i = 1; i < ventasTotalesPorVendedor.length; i++) {
            if (ventasTotalesPorVendedor[i] > ventasTotalesPorVendedor[indiceVendedorMasVentas]) {
                indiceVendedorMasVentas = i;
            }
        }

        System.out.println("El vendedor que recaudó más dinero es:");
        System.out.println("Nombre: " + nombresVendedores[indiceVendedorMasVentas]);
        System.out.println("Apellido: " + apellidosVendedores[indiceVendedorMasVentas]);
        System.out.println("Tipo de Documento: " + tipoDocumentos[indiceVendedorMasVentas]);
        System.out.println("Número de Documento: " + numeroDocumentos[indiceVendedorMasVentas]);
        System.out.println("Total Recaudado: " + ventasTotalesPorVendedor[indiceVendedorMasVentas]);
    }
}
